generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model UserTable {
  id        String      @id
  email     String      @unique
  name      String
  password  String
  role      String      @default("ORG")
  status    String      @default("ACTIVE")
  createdAt DateTime    @default(now())
  updatedAt DateTime?
  Polls     PollTable[] @relation("FK_Poll_User")

  @@index([status])
}

model RefreshTokenTable {
  id        String   @id
  familyId  String
  userId    String
  token     String
  createdAt DateTime
  expiresAt DateTime
  status    String   @default("GRANTED")

  @@index([familyId])
  @@map("RefreshTokens")
}

model PollTable {
  id            String              @id
  userId        String
  name          String
  createdAt     DateTime
  expiresAt     DateTime
  status        String              @default("ACTIVE")
  PollQuestions PollQuestionTable[] @relation("FK_PollQuestion_Poll")
  User          UserTable           @relation("FK_Poll_User", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userId, id])
}

model PollQuestionTable {
  id                  String                    @id
  userId              String
  pollId              String
  name                String
  PollQuestionAnswers PollQuestionAnswerTable[] @relation("FK_PollQuestionAnswer_PollQuestion")
  Poll                PollTable                 @relation("FK_PollQuestion_Poll", fields: [userId, pollId], references: [userId, id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([userId, id])
}

model PollQuestionAnswerTable {
  id             String            @id
  pollQuestionId String
  macAddress     String
  PollQuestion   PollQuestionTable @relation("FK_PollQuestionAnswer_PollQuestion", fields: [pollQuestionId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([macAddress])
}
