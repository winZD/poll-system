generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model OrgTable {
  id        String       @id
  email     String       @unique
  name      String
  role      String       @default("ORG")
  status    String       @default("ACTIVE")
  createdAt DateTime     @default(now())
  updatedAt DateTime?
  Polls     PollTable[]  @relation("FK_Poll_Org")
  Users     UserTable[]  @relation("FK_User_Org")
  Votes     VotesTable[] @relation("FK_Vote_Org")

  @@index([status])
}

model UserTable {
  id          String      @id
  orgId       String
  email       String      @unique
  name        String
  password    String
  role        String      @default("USER")
  permissions String      @default("")
  status      String      @default("ACTIVE")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?
  Polls       PollTable[] @relation("FK_Poll_User")
  Org         OrgTable    @relation("FK_User_Org", fields: [orgId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([status])
}

model RefreshTokenTable {
  id        String   @id
  familyId  String
  userId    String
  token     String
  createdAt DateTime
  expiresAt DateTime
  status    String   @default("GRANTED")

  @@index([familyId])
  @@map("RefreshTokens")
}

model PollTable {
  id            String              @id
  orgId         String
  userId        String
  name          String
  createdAt     DateTime
  expiresAt     DateTime
  status        String              @default("ACTIVE")
  iframeTitle   String
  iframeSrc     String
  PollQuestions PollQuestionTable[] @relation("FK_PollQuestion_Poll")
  User          UserTable           @relation("FK_Poll_User", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Org           OrgTable            @relation("FK_Poll_Org", fields: [orgId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([orgId, id])
}

model PollQuestionTable {
  id     String       @id
  orgId  String
  pollId String
  name   String
  Poll   PollTable    @relation("FK_PollQuestion_Poll", fields: [orgId, pollId], references: [orgId, id], onDelete: NoAction, onUpdate: NoAction)
  Votes  VotesTable[] @relation("FK_PollQuestionAnswer_PollQuestion")

  @@unique([orgId, id])
}

model VotesTable {
  id             String            @id
  orgId          String
  pollQuestionId String
  fingerPrint    String
  Org            OrgTable          @relation("FK_Vote_Org", fields: [orgId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  PollQuestion   PollQuestionTable @relation("FK_PollQuestionAnswer_PollQuestion", fields: [pollQuestionId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([orgId, fingerPrint])
}
